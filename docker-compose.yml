---
version: '3.7'
services:
  ## MySQL Docker Compose Config
  bloggios-mysql:
    container_name: bloggios-mysql
    image: mysql
    volumes:
      - ./mysql_bloggios_data:/var/lib/mysql
    ports:
      - '3307:3306'
    expose:
      - '3307'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bloggios
      MYSQL_USER: bloggios
      MYSQL_PASSWORD: password

#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  broker:
#    image: confluentinc/cp-kafka:7.0.1
#    container_name: broker
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: rohitparih/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    expose:
      - "8761"
    environment:
      - SPRING_PROFILES_ACTIVE=image
    depends_on:
      - zipkin

  api-gateway:
    image: rohitparih/api-gateway
    container_name: api-gateway
    ports:
      - "7000:7000"
    expose:
      - "7000"
    environment:
      - SPRING_PROFILES_ACTIVE=image
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server

  ## Order-Service Docker Compose Config
  registration-service-api:
    container_name: registration-service-api
    image: rohitparih/registration-service-api
    environment:
      - SPRING_PROFILES_ACTIVE=image
      - SPRING_DATASOURCE_URL=jdbc:mysql://bloggios-mysql:3306/bloggios
    depends_on:
      bloggios-mysql:
        condition: service_healthy

  sm-category-service-api:
    container_name: sm-category-service-api
    image: rohitparih/sm-category-service-api
    environment:
      - SPRING_PROFILES_ACTIVE=image
    depends_on:
      bloggios-mysql:
        condition: service_healthy
      discovery-server:
        condition: service_started
      api-gateway:
        condition: service_started

  sm-post-service-api:
    container_name: sm-post-service-api
    image: rohitparih/sm-post-service-api
    environment:
      - SPRING_PROFILES_ACTIVE=image
    depends_on:
      bloggios-mysql:
        condition: service_healthy
      discovery-server:
        condition: service_started
      api-gateway:
        condition: service_started

  sm-tag-service-api:
    container_name: sm-tag-service-api
    image: rohitparih/sm-tag-service-api
    environment:
      - SPRING_PROFILES_ACTIVE=image
    depends_on:
      bloggios-mysql:
        condition: service_healthy
      discovery-server:
        condition: service_started
      api-gateway:
        condition: service_started

  authorization-server:
    container_name: authorization-server
    image: rohitparih/authorization-server
    environment:
      - SPRING_PROFILES_ACTIVE=image
    depends_on:
      bloggios-mysql:
        condition: service_healthy
      discovery-server:
        condition: service_started
      api-gateway:
        condition: service_started